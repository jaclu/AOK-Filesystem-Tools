#!/bin/sh
#   Fake bangpath to help editors and linters
#
#  Part of https://github.com/jaclu/AOK-Filesystem-Tools
#
#  License: MIT
#
#  Copyright (c) 2023,2024: Jacob.Lundqvist@gmail.com
#
#  Common settings that can be used by most shells
#

fs_is_chrooted() {
    ! grep -q " / / " /proc/self/mountinfo
}

prepend_path() {
    extra_p="$1"

    #  shellcheck disable=SC2292 #  Used by Bash and other shells
    if [ -z "$extra_p" ]; then
        echo
        echo "ERROR: ~/.common_rc prepend_path called with no param"
        echo
        exit
    fi

    #  shellcheck disable=SC2292 #  Used by Bash and other shells
    if [ -d "$extra_p" ] && ! echo "$PATH" | grep -q "$extra_p"; then
        #  Only prepend if path exists and is not already in PATH
        export PATH="$extra_p:$PATH"
    fi

    unset extra_p
}

set_current_shell_name() {
    #
    #  The SHELL variable only displays initial login shell
    #  if you change shell, even using ` -l` to indicate
    #  doing a login shell, it doesnt change.
    #  Instead I add CURRENT_SHELL to indicate what this shell is.
    #  On Alpine ash is usually softlinked to busybox
    #
    if [ -n "$FISH_VERSION" ]; then
        CURRENT_SHELL="fish"
    else
        if [ -f /proc/$$/exe ]; then
            # readlink can handle pointers outside a chroot, unlike realpath
            CURRENT_SHELL="$(basename "$(readlink /proc/$$/exe)")" || {
                CURRENT_SHELL="" # unknown
            }
        fi
    fi
}

basic_aliases() {
    #
    # enable color support of ls and also add handy aliases
    #
    if test -x /usr/bin/dircolors; then
        if test -r ~/.dircolors; then
            eval "$(dircolors -b ~/.dircolors)"
        else
            eval "$(dircolors -b)"
        fi
        alias ls='ls --color=auto'
        #alias dir='dir --color=auto'
        #alias vdir='vdir --color=auto'

        alias grep='grep --color=auto'
        alias fgrep='fgrep --color=auto'
        alias egrep='egrep --color=auto'
    fi

    #
    #  Some more ls aliases
    #
    alias ll='ls -alFh'
    alias la='ls -A'
    alias lt='ls -lt'
    alias ld='ls -d */'
}

prompt_colors() {
    #
    #  Here the colors are just defined in the xterm-256 color schema
    #  Next, depending on shells this needs to be translated to
    #  the actual prompt code fort this color
    #

    #
    #  EUID / UID is not available in the ash shell, 'id -u' always works
    #
    if [ "$(id -u)" -eq 0 ]; then
        PCOL_USERNAME=1
    else
        PCOL_USERNAME=34
    fi
    PCOL_CWD=12
    PCOL_GREY=240 # For things that should be less intense

    #
    #  To make iSH nodes stand out if connected from the outside,
    #  or if it is chrooted under another host.
    #  It should also not be pointlessly in your face if you are using
    #  the iSH console
    #

    if [ -n "$SSH_CLIENT" ] || fs_is_chrooted; then
        PCOL_HOSTNAME=222
    else
        PCOL_HOSTNAME=34
    fi
}

#  Function to get battery info and status, if running on iSH-AOK
get_battery_info() {
    # If the shel used is given as a param, color for that shell will be used
    _shell_name="$1"

    #  shellcheck disable=SC2002
    capacity="$(cat /sys/class/power_supply/BAT0/capacity 2>/dev/null | cut -d '.' -f 1)"
    chrg_stat="$(cat /sys/class/power_supply/BAT0/status 2>/dev/null)"

    _f=/home/jaclu/.bat_lvls_tst.sh
    if [ -f "$_f" ]; then
        # shellcheck source=/dev/null
        . "$_f"
    else
        if [ "$capacity" -le 10 ]; then # crit_low  - birgt red
            _chrg_color=196
        elif [ "$capacity" -le 20 ]; then # very low  - low intense red
            _chrg_color=9
        elif [ "$capacity" -le 30 ]; then # low       -  yellow
            _chrg_color=191
        elif [ "$capacity" -le 40 ]; then # lowish    - bright green
            _chrg_color=82
        elif [ "$capacity" -gt 89 ]; then # very_high - dark blue
            _chrg_color=21
        elif [ "$capacity" -gt 80 ]; then # highish   - dark green
            _chrg_color=28
        else # normal    - green
            _chrg_color=2
        fi
    fi

    case "$_shell_name" in
    "bash" | "ash") _bat_color="\[\e[38;5;${_chrg_color}m\]" ;;
    "zsh") _bat_color="%F{$_chrg_color}" ;;
    *) _bat_color="" ;;
    esac
    unset _chrg_color
    unset _shell_name

    if [ -z "$capacity" ]; then
        echo "Battery not found " >/dev/stderr
    else
        case $chrg_stat in
        "Full") _bat_state="${capacity}F" ;;
        "Charging") _bat_state="${capacity}+" ;;
        "Unplugged") _bat_state="${capacity}-" ;;
        *) _bat_state="${capacity}" ;;
        esac
        printf ' %s%s' "$_bat_color" "$_bat_state"
        unset _bat_state
        unset _bat_color
    fi
}

get_sysload_lvl() {
    # Debian 10 cant display sysload on iSH...
    sysload_not_available="$HOME/.no-sysload-available"
    [ -f "$sysload_not_available" ] && {
        echo
        return
    }
    _sysload="$(uptime | awk -F'average:' '{print $2}' | awk -F, '{print $1}' | tr -d ' ')"
    [ "$_sysload" = "0.00" ] && {
        touch "$sysload_not_available"
        echo
        return
    }
    _load_lvl="$(echo "$_sysload" | cut -d. -f 1)"
    if [ "$_load_lvl" -ge 20 ]; then
        _load_color=196 # red
    elif [ "$_load_lvl" -ge 5 ]; then
        _load_color=3 # yellow
    else
        _load_color="242" # green
    fi

    case "$CURRENT_SHELL" in
    zsh) printf '%s' "%F{$_load_color}$_sysload" ;;
    bash | ash) printf '%s' "\[\e[38;5;${_load_color}m\]$_sysload" ;;
    *) ;;
    esac

    unset _sysload
    unset _load_lvl
    unset _load_color
}

use_static_bash_prompt() {
    #
    #  Since Ash also uses the Bash style prompt, it is defined here
    #  so that Ash also can use it
    #
    prompt_colors

    #  shell specific notation for prompt colors
    PCOL_USERNAME="\[\e[38;5;${PCOL_USERNAME}m\]"
    PCOL_HOSTNAME="\[\e[38;5;${PCOL_HOSTNAME}m\]"
    PCOL_CWD="\[\e[38;5;${PCOL_CWD}m\]"
    PCOL_GREY="\[\e[38;5;${PCOL_GREY}m\]"
    PCOL_CLR="\e[0m"

    PS1="${PCOL_USERNAME}\u${PCOL_GREY}@${PCOL_HOSTNAME}${_hn}${PCOL_GREY}:${PCOL_CWD}\w${PCOL_CLR}\$ "
}

use_dynamic_bash_prompt() {
    use_static_bash_prompt # call to get the colors defined
    if grep -qi aok /proc/ish/version 2>/dev/null; then
        PROMPT_COMMAND='update_dynamic_aok_bash_prompt;'"$PROMPT_COMMAND"
    else
        PROMPT_COMMAND='update_dynamic_bash_prompt;'"$PROMPT_COMMAND"
    fi
}

update_dynamic_aok_bash_prompt() {
    PS1="${PCOL_USERNAME}\u${PCOL_GREY}@${PCOL_HOSTNAME}${_hn} ${PCOL_GREY}$(get_sysload_lvl)$(get_battery_info bash)${PCOL_GREY}:${PCOL_CWD}\w${PCOL_CLR}\$ "
}

update_dynamic_bash_prompt() {
    # non ish-aok kernels doesnt support battery info, so no need to fail the check on every prompt
    PS1="${PCOL_USERNAME}\u${PCOL_GREY}@${PCOL_HOSTNAME}${_hn} ${PCOL_GREY}$(get_sysload_lvl)${PCOL_GREY}:${PCOL_CWD}\w${PCOL_CLR}\$ "
}

#===============================================================
#
#   Main
#
#===============================================================

#
#  Setup environment to use UTF-8 and 24h time notation
#
# export LANG=en_US.UTF-8
# export LANGUAGE=en_US.UTF-8
# export LC_TIME=en_GB.UTF-8 # selects 24h notation instead of am/pm

set_current_shell_name

#
#  Some common bin locations in home dir,
#  add in reverse order, last will be first in PATH
#
prepend_path "$HOME"/bin
prepend_path "$HOME"/.local/bin
unset -f prepend_path

basic_aliases
unset -f basic_aliases

#
#  This is a helper for setting hostname in prompts, since the typical \h
#  Doesnt work on iOS >= 17
#  use ${_hn} in your prompt!
#
if test -x /usr/local/bin/hostname; then
    _hn="$(/usr/local/bin/hostname)"
else
    _hn="$(/bin/hostname -s)"
fi
